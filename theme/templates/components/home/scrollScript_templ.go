// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package home

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func ScrollScript() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<script>\n\t\t\t\tdocument.addEventListener('DOMContentLoaded', () => {\n\t\t\t\t\tlet isScrolling = false;\n\t\t\t\t\tconst sections = Array.from(document.querySelectorAll('section[id], header[id]'));\n\t\t\t\t\t\n\t\t\t\t\tfunction updateCurrentSection() {\n\t\t\t\t\t\tif (isScrolling) return;\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Find the section that should be active\n\t\t\t\t\t\tlet activeSection = null;\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (let i = sections.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\tconst section = sections[i];\n\t\t\t\t\t\t\tconst rect = section.getBoundingClientRect();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// If section top is at or above the viewport top, this is our active section\n\t\t\t\t\t\t\tif (rect.top <= 50) { // 50px threshold for better UX\n\t\t\t\t\t\t\t\tactiveSection = section.id;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// If no section is above the top, use the first section\n\t\t\t\t\t\tif (!activeSection) {\n\t\t\t\t\t\t\tactiveSection = sections[0].id;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\thistory.replaceState(null, null, '#' + activeSection);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Update on scroll\n\t\t\t\t\tlet ticking = false;\n\t\t\t\t\twindow.addEventListener('scroll', () => {\n\t\t\t\t\t\tif (!ticking) {\n\t\t\t\t\t\t\trequestAnimationFrame(() => {\n\t\t\t\t\t\t\t\tupdateCurrentSection();\n\t\t\t\t\t\t\t\tticking = false;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tticking = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t// Initial update\n\t\t\t\t\tupdateCurrentSection();\n\t\t\t\t\t\n\t\t\t\t\t// Pause observer during smooth scroll navigation\n\t\t\t\t\tdocument.querySelectorAll('a[href^=\"#\"]').forEach(link => {\n\t\t\t\t\t\tlink.addEventListener('click', () => {\n\t\t\t\t\t\t\tisScrolling = true;\n\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\tisScrolling = false;\n\t\t\t\t\t\t\t\tupdateCurrentSection();\n\t\t\t\t\t\t\t}, 1000);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
